name: Build and Deploy Influx Backup to ACK

on:
  workflow_dispatch:

env:
  REGION_ID: cn-shanghai
  REGISTRY: registry.cn-shanghai.aliyuncs.com
  NAMESPACE: netilion-china
  IMAGE: influx-backup
  TAG: ${{ github.sha }}
  ACK_CLUSTER_ID: ce1d89e1ffb644a42ad94a226e5e8aa52
  ACK_DEPLOYMENT_NAME: hub
  DOCKERFILE_NAME: Dockerfile.china.staging

jobs:
  build:
    runs-on: ubuntu-latest
    environment: aliyun

    steps:
    - name: Set Environment
      run: |
        echo "ACK_CLUSTER_ID=cfbfd43a3637d47a3ad079bcb0557a275" >> $GITHUB_ENV
        echo "DOCKERFILE_NAME=Dockerfile.china" >> $GITHUB_ENV
      if: github.event.inputs.cluster == 'production'

    - name: Checkout
      uses: actions/checkout@v2

    # 1.1 Login to ACR
    - name: Login to ACR with the AccessKey pair
      uses: aliyun/acr-login@v1
      with:
        region-id: "${{ env.REGION_ID }}"
        access-key-id: "${{ secrets.ALIYUN_ACCESS_KEY_ID }}"
        access-key-secret: "${{ secrets.ALIYUN_ACCESS_KEY_SECRET }}"

    # 1.2 Buid and push image to ACR
    - name: Build and push image to ACR
      run: |
        docker build --tag "$REGISTRY/$NAMESPACE/$IMAGE:$TAG"  .
        docker push "$REGISTRY/$NAMESPACE/$IMAGE:$TAG"

    # 1.3 Scan image in ACR
    - name: Scan image in ACR
      uses: aliyun/acr-scan@v1
      with:
        region-id: "${{ env.REGION_ID }}"
        access-key-id: "${{ secrets.ALIYUN_ACCESS_KEY_ID }}"
        access-key-secret: "${{ secrets.ALIYUN_ACCESS_KEY_SECRET }}"
        repository: "${{ env.NAMESPACE }}/${{ env.IMAGE }}"
        tag: "${{ env.TAG }}"


    # 3.1 Set ACK context
    - name: Set K8s context
      uses: aliyun/ack-set-context@v1
      with:
        access-key-id: "${{ secrets.ALIYUN_ACCESS_KEY_ID }}"
        access-key-secret: "${{ secrets.ALIYUN_ACCESS_KEY_SECRET }}"
        cluster-id: "${{ env.ACK_CLUSTER_ID }}"

    # 3.2 Deploy the image to the ACK cluster
    - name: Set up Helm
      run: |-
        curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3
        chmod 700 get_helm.sh
        ./get_helm.sh
    - name: Deploy
      run: |-
        helm upgrade --install --recreate-pods --force --reset-values --set image.repository=$REGISTRY/$NAMESPACE/$IMAGE,image.tag=$TAG influx-backup ./.k8s/cronjobHelm
